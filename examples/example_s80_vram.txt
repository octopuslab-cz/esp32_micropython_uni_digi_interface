log from terminal -->
--- example_s80_vram.asm ---
--------------------------------

; example_s80_vram - virtual RAM pair H_L
#DATA = "----- octopus"
;
;
start:
    LXI_B 0x03 0x02   ; 
    MOV_A,A
    ;
    ;
    MVI_L 0x1   ; L = 1
    MVI_H 0x1   ; H = 1
    MVI_A 49    ; "1" = 49 ASCII
    MOV_M,A     ; (HL)<-A
    ;
    MOV_B,B     ; spec.suroutine - print vm
    ;
    LXI_H 2 1   ; L=2 H=1 # H byte3 / L byte2 :: I L H
    MOV_A,A
    MVI_M 50    ; "2"
    INX_H       ; H_L + 1  
    MVI_M 51    ; "3"
    ;
    MOV_B,B     ; spec.suroutine - print vm
    ;
;
end.


--------------------------------
[ two- translator ]
data_string: ----- octopus
0  pc: 0  instr: 0  pc+ 0  p1,p2  
1  pc: 0  instr: 0  pc+ 0  p1,p2  
---parts: ['LXI_B', '0x03', '0x02']
-LD/ST-A-add 0x03 0x02
2  pc: 3  instr: 0x1  pc+ 3  p1,p2  
---parts: ['MOV_A,A']
3  pc: 4  instr: 0x7f  pc+ 1  p1,p2  
---parts: ['MVI_L', '0x1']
4  pc: 6  instr: 0x2e  pc+ 2  p1,p2 0x1 
---parts: ['MVI_H', '0x1']
5  pc: 8  instr: 0x26  pc+ 2  p1,p2 0x1 
---parts: ['MVI_A', '49']
6  pc: 10  instr: 0x3e  pc+ 2  p1,p2 49 
---parts: ['MOV_M,A']
7  pc: 11  instr: 0x77  pc+ 1  p1,p2  
---parts: ['MOV_B,B']
8  pc: 12  instr: 0x40  pc+ 1  p1,p2  
---parts: ['LXI_H', '2', '1']
-LD/ST-A-add 2 1
9  pc: 15  instr: 0x21  pc+ 3  p1,p2  
---parts: ['MOV_A,A']
10  pc: 16  instr: 0x7f  pc+ 1  p1,p2  
---parts: ['MVI_M', '50']
11  pc: 18  instr: 0x36  pc+ 2  p1,p2 50 
---parts: ['INX_H']
Err. No3
12  pc: 20  instr: 0x23  pc+ 2  p1,p2  
---parts: ['MVI_M', '51']
13  pc: 22  instr: 0x36  pc+ 2  p1,p2 51 
---parts: ['MOV_B,B']
14  pc: 23  instr: 0x40  pc+ 1  p1,p2  
15  pc: 23  instr: 0  pc+ 0  p1,p2  
- temp_labels: {'start:': 0}
- temp_prog. : ['0x1', '0x03', '0x02', '0x7f', '0x2e', '0x1', '0x26', '0x1', '0x3e', '49', '0x77', '0x40', '0x21', '2', '1', '0x7f', '0x36', '50', '0x23', 0, '0x36', '51', '0x40']
[ the second pass ] replaces labels with addr.
.:. function:  create_hex_program
--> duration (milis.) --> 1
--------------------------------
- program_num
[1, 3, 2, 127, 46, 1, 38, 1, 62, 49, 119, 64, 33, 2, 1, 127, 54, 50, 35, 0, 54, 51, 64]
- program_hex
01 03 02 7f 2e 01 26 01 3e 31 77 40 21 02 01 7f 36 32 23 00 36 33 40 
--------------------------------
- len(instr_set): 23
================================
0 {2} 01   LXI_B 03 02
                      --->#1 |S0 Z1 C0| 00000000 | 0, 0x0 3 
3 {0} 7f   MOV_A,A
--> R  DEC BIN    HEX (B_C)
    A:  0 00000000 00
    B:  2 00000010 02  (515)
    C:  3 00000011 03  [0]
                      --->#2 |S0 Z1 C0| 00000000 | 0, 0x0 4 
4 {1} 2e   MVI_L 0x1
                      --->#3 |S0 Z0 C0| 00000000 | 0, 0x0 6 
6 {1} 26   MVI_H 0x1
                      --->#4 |S0 Z0 C0| 00000000 | 0, 0x0 8 
8 {1} 3e   MVI_A 0x31
                      --->#5 |S0 Z0 C0| 00110001 | 49, 0x31 10 
10 {0} 77   MOV_M,A
                      --->#6 |S0 Z0 C0| 00110001 | 49, 0x31 11 
11 {0} 40   MOV_B,B
--> spec.sub. | vitrual memory: {255: 0, 256: 45, 257: 49, 258: 45, 259: 45, 260: 45, 261: 32, 262: 111, 263: 99, 264: 116, 265: 111, 266: 112, 267: 117, 268: 115, 269: 0}
        {255: 0, 256: 45, 257: 49, 258: 45, 259: 45, 260: 45, 261: 32, 262: 111, 263: 99, 264: 116, 265: 111, 266: 112, 267: 117, 268: 115, 269: 0}
                      --->#7 |S0 Z0 C0| 00110001 | 49, 0x31 12 
12 {2} 21   LXI_H 02 01
                      --->#8 |S0 Z0 C0| 00110001 | 49, 0x31 15 
15 {0} 7f   MOV_A,A
--> R  DEC BIN    HEX (B_C)
    A:  49 00110001 31
    B:  2 00000010 02  (515)
    C:  3 00000011 03  [258]
                      --->#9 |S0 Z0 C0| 00110001 | 49, 0x31 16 
16 {1} 36   MVI_M 0x32
                      --->#10 |S0 Z0 C0| 00110001 | 49, 0x31 18 
18 {1} 23   INX_H 0x0
                      --->#11 |S0 Z0 C0| 00110001 | 49, 0x31 19 
19 {0} 00   NOP
                      --->#12 |S0 Z0 C0| 00110001 | 49, 0x31 20 
20 {1} 36   MVI_M 0x33
                      --->#13 |S0 Z0 C0| 00110001 | 49, 0x31 22 
22 {0} 40   MOV_B,B
--> spec.sub. | vitrual memory: {255: 0, 256: 45, 257: 49, 258: 50, 259: 51, 260: 45, 261: 32, 262: 111, 263: 99, 264: 116, 265: 111, 266: 112, 267: 117, 268: 115, 269: 0}
        {255: 0, 256: 45, 257: 49, 258: 50, 259: 51, 260: 45, 261: 32, 262: 111, 263: 99, 264: 116, 265: 111, 266: 112, 267: 117, 268: 115, 269: 0}
                      --->#14 |S0 Z0 C0| 00110001 | 49, 0x31 23 
.:. function:  run_hex_code
--> duration (milis.) --> 1528

--------------------------------
ESP mem_free: 45616
================================
[ system registers ]
a: 49 0x31 00110001
b: 2  | c: 3
h: 1  | l: 3
--------------------------------
|S|Z|0|C|0|P|1|C|
|0|0|0|0|0|0|1|0|
================================
[ virtual memory ] - (16/32 bytes)
[45, 49, 50, 51, 45, 32, 111, 99, 116, 111, 112, 117, 115, 0, 0, 0]
--- hexa:
0x2d 0x31 0x32 0x33 0x2d 0x20 0x6f 0x63 0x74 0x6f 0x70 0x75 0x73 0x0 0x0 0x0 
--- string:
-123- octopus
================================
asm file name: example_s80_vram.asm
core_s80 ver. 0.5.1