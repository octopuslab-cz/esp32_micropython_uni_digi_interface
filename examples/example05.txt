log from terminal -->
--- example05_s80.asm ---
--------------------------------

; example05 spec subroutines / 2x call
; org 0x00
;
    JMP start
    NOP
sub1:
    MOV_A,A ; print acc
    RET
    ;
sub2:
    MOV_E,E ; print vm
    RET
    ;
sub3:
    MOV_B,B ; 
    RET
    ;
start:
    NOP
    MVI_L 0x1 ; note RAM9
    MVI_H 0x1
    MVI_A 0x9
    MOV_M,A
    CALL sub1
    ;
    MVI_L 0x2 ; note RAM7
    MVI_H 0x1
    MVI_A 0x7
    MOV_M,A
    CALL sub1
    ;
    MVI_L 0x1 ; note RAM9
    MVI_H 0x1
    MOV_A,M
               ; b = 7
    CALL sub1
    MVI_A 0xFE ; 36
    CALL sub2
    NOP
end.


--------------------------------
[ two-pass translator ]
---parts: ['JMP', 'start']
---jmp---add 0x00
0  pc: 3  instr: 0xc3  pc+ 3  p1,p2 start 
---parts: ['NOP']
1  pc: 4  instr: 0x0  pc+ 1  p1,p2  
2  pc: 4  instr: 0  pc+ 0  p1,p2  
---parts: ['MOV_A,A']
3  pc: 5  instr: 0x7f  pc+ 1  p1,p2  
---parts: ['RET']
4  pc: 6  instr: 0xc9  pc+ 1  p1,p2  
5  pc: 6  instr: 0  pc+ 0  p1,p2  
---parts: ['MOV_E,E']
6  pc: 7  instr: 0x5b  pc+ 1  p1,p2  
---parts: ['RET']
7  pc: 8  instr: 0xc9  pc+ 1  p1,p2  
8  pc: 8  instr: 0  pc+ 0  p1,p2  
---parts: ['MOV_B,B']
9  pc: 9  instr: 0x40  pc+ 1  p1,p2  
---parts: ['RET']
10  pc: 10  instr: 0xc9  pc+ 1  p1,p2  
11  pc: 10  instr: 0  pc+ 0  p1,p2  
---parts: ['NOP']
12  pc: 11  instr: 0x0  pc+ 1  p1,p2  
---parts: ['MVI_L', '0x1']
13  pc: 13  instr: 0x2e  pc+ 2  p1,p2 0x1 
---parts: ['MVI_H', '0x1']
14  pc: 15  instr: 0x26  pc+ 2  p1,p2 0x1 
---parts: ['MVI_A', '0x9']
15  pc: 17  instr: 0x3e  pc+ 2  p1,p2 0x9 
---parts: ['MOV_M,A']
16  pc: 18  instr: 0x77  pc+ 1  p1,p2  
---parts: ['CALL', 'sub1']
---jmp---add 0x00
17  pc: 21  instr: 0xcd  pc+ 3  p1,p2 sub1 
---parts: ['MVI_L', '0x2']
18  pc: 23  instr: 0x2e  pc+ 2  p1,p2 0x2 
---parts: ['MVI_H', '0x1']
19  pc: 25  instr: 0x26  pc+ 2  p1,p2 0x1 
---parts: ['MVI_A', '0x7']
20  pc: 27  instr: 0x3e  pc+ 2  p1,p2 0x7 
---parts: ['MOV_M,A']
21  pc: 28  instr: 0x77  pc+ 1  p1,p2  
---parts: ['CALL', 'sub1']
---jmp---add 0x00
22  pc: 31  instr: 0xcd  pc+ 3  p1,p2 sub1 
---parts: ['MVI_L', '0x1']
23  pc: 33  instr: 0x2e  pc+ 2  p1,p2 0x1 
---parts: ['MVI_H', '0x1']
24  pc: 35  instr: 0x26  pc+ 2  p1,p2 0x1 
---parts: ['MOV_A,M']
25  pc: 36  instr: 0x7e  pc+ 1  p1,p2  
---parts: ['CALL', 'sub1']
---jmp---add 0x00
26  pc: 39  instr: 0xcd  pc+ 3  p1,p2 sub1 
---parts: ['MVI_A', '0xFE']
27  pc: 41  instr: 0x3e  pc+ 2  p1,p2 0xFE 
---parts: ['CALL', 'sub2']
---jmp---add 0x00
28  pc: 44  instr: 0xcd  pc+ 3  p1,p2 sub2 
---parts: ['NOP']
29  pc: 45  instr: 0x0  pc+ 1  p1,p2  
30  pc: 45  instr: 0  pc+ 0  p1,p2  
- temp_labels: {'sub3:': 8, 'sub2:': 6, 'sub1:': 4, 'start:': 10}
- temp_prog. : ['0xc3', 0, 'start', '0x0', '0x7f', '0xc9', '0x5b', '0xc9', '0x40', '0xc9', '0x0', '0x2e', '0x1', '0x26', '0x1', '0x3e', '0x9', '0x77', '0xcd', 0, 'sub1', '0x2e', '0x2', '0x26', '0x1', '0x3e', '0x7', '0x77', '0xcd', 0, 'sub1', '0x2e', '0x1', '0x26', '0x1', '0x7e', '0xcd', 0, 'sub1', '0x3e', '0xFE', '0xcd', 0, 'sub2', '0x0']
[ the second pass replaces labels with addr. ]
---label--- start: 10
start <--- 10
---label--- sub1: 4
sub1 <--- 4
---label--- sub1: 4
sub1 <--- 4
---label--- sub1: 4
sub1 <--- 4
---label--- sub2: 6
sub2 <--- 6
- program_num [195, 0, 10, 0, 127, 201, 91, 201, 64, 201, 0, 46, 1, 38, 1, 62, 9, 119, 205, 0, 4, 46, 2, 38, 1, 62, 7, 119, 205, 0, 4, 46, 1, 38, 1, 126, 205, 0, 4, 62, 254, 205, 0, 6, 0]
--------------------------------
- len(instr_set): 45
================================
0 {2} c3   JMP 00 0a
                      --->#1 |S0 Z1 C0| 00000000 | 0, 0x0 10 
10 {0} 00   NOP
                      --->#2 |S0 Z1 C0| 00000000 | 0, 0x0 11 
11 {1} 2e   MVI_L 0x1
                      --->#3 |S0 Z1 C0| 00000000 | 0, 0x0 13 
13 {1} 26   MVI_H 0x1
                      --->#4 |S0 Z1 C0| 00000000 | 0, 0x0 15 
15 {1} 3e   MVI_A 0x9
                      --->#5 |S0 Z0 C0| 00001001 | 9, 0x9 17 
17 {0} 77   MOV_M,A
                      --->#6 |S0 Z0 C0| 00001001 | 9, 0x9 18 
18 {2} cd   CALL 00 04
                      --->#7 |S0 Z0 C0| 00001001 | 9, 0x9 4 
4 {0} 7f   MOV_A,A
--> spec.sub. | acc: 9
                      --->#8 |S0 Z0 C0| 00001001 | 9, 0x9 5 
5 {0} c9   RET
                      --->#9 |S0 Z0 C0| 00001001 | 9, 0x9 21 
21 {1} 2e   MVI_L 0x2
                      --->#10 |S0 Z0 C0| 00001001 | 9, 0x9 23 
23 {1} 26   MVI_H 0x1
                      --->#11 |S0 Z0 C0| 00001001 | 9, 0x9 25 
25 {1} 3e   MVI_A 0x7
                      --->#12 |S0 Z0 C0| 00000111 | 7, 0x7 27 
27 {0} 77   MOV_M,A
                      --->#13 |S0 Z0 C0| 00000111 | 7, 0x7 28 
28 {2} cd   CALL 00 04
                      --->#14 |S0 Z0 C0| 00000111 | 7, 0x7 4 
4 {0} 7f   MOV_A,A
--> spec.sub. | acc: 7
                      --->#15 |S0 Z0 C0| 00000111 | 7, 0x7 5 
5 {0} c9   RET
                      --->#16 |S0 Z0 C0| 00000111 | 7, 0x7 31 
31 {1} 2e   MVI_L 0x1
                      --->#17 |S0 Z0 C0| 00000111 | 7, 0x7 33 
33 {1} 26   MVI_H 0x1
                      --->#18 |S0 Z0 C0| 00000111 | 7, 0x7 35 
35 {0} 7e   MOV_A,M
                      --->#19 |S0 Z0 C0| 00001001 | 9, 0x9 36 
36 {2} cd   CALL 00 04
                      --->#20 |S0 Z0 C0| 00001001 | 9, 0x9 4 
4 {0} 7f   MOV_A,A
--> spec.sub. | acc: 9
                      --->#21 |S0 Z0 C0| 00001001 | 9, 0x9 5 
5 {0} c9   RET
                      --->#22 |S0 Z0 C0| 00001001 | 9, 0x9 39 
39 {1} 3e   MVI_A 0xfe
                      --->#23 |S0 Z0 C0| 11111110 | 254, 0xfe 41 
41 {2} cd   CALL 00 06
                      --->#24 |S0 Z0 C0| 11111110 | 254, 0xfe 6 
6 {0} 5b   MOV_E,E
--> spec.sub. | sleep 1 sec. (slEEp)
                      --->#25 |S0 Z0 C0| 11111110 | 254, 0xfe 7 
7 {0} c9   RET
                      --->#26 |S0 Z0 C0| 11111110 | 254, 0xfe 44 
44 {0} 00   NOP
                      --->#27 |S0 Z0 C0| 11111110 | 254, 0xfe 45 
.:. function:  run_hex_code
--> duration (milis.) --> 1203

--------------------------------
mem_free: 42304
================================
[ system registers ]
a: 254 0xfe 0b11111110
b: 0  | c: 0
h: 1  | l: 1
--------------------------------
|S|Z|0|C|0|P|1|C|
|0|0|0|0|0|0|1|0|
================================
[ virtual memory ] - (16/32 bytes)
[0, 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--- hexa:
0x0 0x9 0x7 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
--- string:

================================
asm file name: example05_s80.asm
core_s80 ver. 0.5