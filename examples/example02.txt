log from terminal -->
--- example02_s80.asm ---
--------------------------------

; example02_s80 - test jumps
; org 0x00 ; (default)
;
start:
    MVI_A 0x07 ; note
    MOV_B,A
               ; b = 7
loop1:
    NOP
    DCR_A      ; decrement
    JNZ loop1  ; jump if not zero
    NOP
    MVI_A 0x01
    MVI_B 0x07
    ;
loop2:
    NOP ; 
    RLC
    DCR_B      ; decrement
    JNZ loop2  ; jump if not zero 
    NOP
    MVI_A 0x09 ; a = 9
;    
    NOP
end.


--------------------------------
[ two-pass translator ]
0  pc: 0  instr: 0  pc+ 0  p1,p2  
---parts: ['MVI_A', '0x07']
1  pc: 2  instr: 0x3e  pc+ 2  p1,p2 0x07 
---parts: ['MOV_B,A']
2  pc: 3  instr: 0x47  pc+ 1  p1,p2  
3  pc: 3  instr: 0  pc+ 0  p1,p2  
---parts: ['NOP']
4  pc: 4  instr: 0x0  pc+ 1  p1,p2  
---parts: ['DCR_A']
5  pc: 5  instr: 0x3d  pc+ 1  p1,p2  
---parts: ['JNZ', 'loop1']
---jmp---add 0x00
6  pc: 8  instr: 0xc2  pc+ 3  p1,p2 loop1 
---parts: ['NOP']
7  pc: 9  instr: 0x0  pc+ 1  p1,p2  
---parts: ['MVI_A', '0x01']
8  pc: 11  instr: 0x3e  pc+ 2  p1,p2 0x01 
---parts: ['MVI_B', '0x07']
9  pc: 13  instr: 0x6  pc+ 2  p1,p2 0x07 
10  pc: 13  instr: 0  pc+ 0  p1,p2  
---parts: ['NOP']
11  pc: 14  instr: 0x0  pc+ 1  p1,p2  
---parts: ['RLC']
12  pc: 15  instr: 0x7  pc+ 1  p1,p2  
---parts: ['DCR_B']
13  pc: 16  instr: 0x5  pc+ 1  p1,p2  
---parts: ['JNZ', 'loop2']
---jmp---add 0x00
14  pc: 19  instr: 0xc2  pc+ 3  p1,p2 loop2 
---parts: ['NOP']
15  pc: 20  instr: 0x0  pc+ 1  p1,p2  
---parts: ['MVI_A', '0x09']
16  pc: 22  instr: 0x3e  pc+ 2  p1,p2 0x09 
---parts: ['NOP']
17  pc: 23  instr: 0x0  pc+ 1  p1,p2  
18  pc: 23  instr: 0  pc+ 0  p1,p2  
- temp_labels: {'loop2:': 13, 'loop1:': 3, 'start:': 0}
- temp_prog. : ['0x3e', '0x07', '0x47', '0x0', '0x3d', '0xc2', 0, 'loop1', '0x0', '0x3e', '0x01', '0x6', '0x07', '0x0', '0x7', '0x5', '0xc2', 0, 'loop2', '0x0', '0x3e', '0x09', '0x0']
[ the second pass replaces labels with addr. ]
---label--- loop1: 3
loop1 <--- 3
---label--- loop2: 13
loop2 <--- 13
- program_num [62, 7, 71, 0, 61, 194, 0, 3, 0, 62, 1, 6, 7, 0, 7, 5, 194, 0, 13, 0, 62, 9, 0]
--------------------------------
- len(instr_set): 23
================================
0 {1} 3e   MVI_A 0x7
                      --->#1 |S0 Z0 C0| 00000111 | 7, 0x7 2 
2 {0} 47   MOV_B,A
                      --->#2 |S0 Z0 C0| 00000111 | 7, 0x7 3 
3 {0} 00   NOP
                      --->#3 |S0 Z0 C0| 00000111 | 7, 0x7 4 
4 {0} 3d   DCR_A
                      --->#4 |S0 Z0 C0| 00000110 | 6, 0x6 5 
5 {2} c2   JNZ 00 03
                      --->#5 |S0 Z0 C0| 00000110 | 6, 0x6 3 
3 {0} 00   NOP
                      --->#6 |S0 Z0 C0| 00000110 | 6, 0x6 4 
4 {0} 3d   DCR_A
                      --->#7 |S0 Z0 C0| 00000101 | 5, 0x5 5 
5 {2} c2   JNZ 00 03
                      --->#8 |S0 Z0 C0| 00000101 | 5, 0x5 3 
3 {0} 00   NOP
                      --->#9 |S0 Z0 C0| 00000101 | 5, 0x5 4 
4 {0} 3d   DCR_A
                      --->#10 |S0 Z0 C0| 00000100 | 4, 0x4 5 
5 {2} c2   JNZ 00 03
                      --->#11 |S0 Z0 C0| 00000100 | 4, 0x4 3 
3 {0} 00   NOP
                      --->#12 |S0 Z0 C0| 00000100 | 4, 0x4 4 
4 {0} 3d   DCR_A
                      --->#13 |S0 Z0 C0| 00000011 | 3, 0x3 5 
5 {2} c2   JNZ 00 03
                      --->#14 |S0 Z0 C0| 00000011 | 3, 0x3 3 
3 {0} 00   NOP
                      --->#15 |S0 Z0 C0| 00000011 | 3, 0x3 4 
4 {0} 3d   DCR_A
                      --->#16 |S0 Z0 C0| 00000010 | 2, 0x2 5 
5 {2} c2   JNZ 00 03
                      --->#17 |S0 Z0 C0| 00000010 | 2, 0x2 3 
3 {0} 00   NOP
                      --->#18 |S0 Z0 C0| 00000010 | 2, 0x2 4 
4 {0} 3d   DCR_A
                      --->#19 |S0 Z0 C0| 00000001 | 1, 0x1 5 
5 {2} c2   JNZ 00 03
                      --->#20 |S0 Z0 C0| 00000001 | 1, 0x1 3 
3 {0} 00   NOP
                      --->#21 |S0 Z0 C0| 00000001 | 1, 0x1 4 
4 {0} 3d   DCR_A
                      --->#22 |S0 Z1 C0| 00000000 | 0, 0x0 5 
5 {2} c2   JNZ 00 03
                      --->#23 |S0 Z1 C0| 00000000 | 0, 0x0 8 
8 {0} 00   NOP
                      --->#24 |S0 Z1 C0| 00000000 | 0, 0x0 9 
9 {1} 3e   MVI_A 0x1
                      --->#25 |S0 Z0 C0| 00000001 | 1, 0x1 11 
11 {1} 06   MVI_B 0x7
                      --->#26 |S0 Z0 C0| 00000001 | 1, 0x1 13 
13 {0} 00   NOP
                      --->#27 |S0 Z0 C0| 00000001 | 1, 0x1 14 
14 {0} 07   RLC
                      --->#28 |S0 Z0 C0| 00000010 | 2, 0x2 15 
15 {0} 05   DCR_B
                      --->#29 |S0 Z0 C0| 00000010 | 2, 0x2 16 
16 {2} c2   JNZ 00 0d
                      --->#30 |S0 Z0 C0| 00000010 | 2, 0x2 13 
13 {0} 00   NOP
                      --->#31 |S0 Z0 C0| 00000010 | 2, 0x2 14 
14 {0} 07   RLC
                      --->#32 |S0 Z0 C0| 00000100 | 4, 0x4 15 
15 {0} 05   DCR_B
                      --->#33 |S0 Z0 C0| 00000100 | 4, 0x4 16 
16 {2} c2   JNZ 00 0d
                      --->#34 |S0 Z0 C0| 00000100 | 4, 0x4 13 
13 {0} 00   NOP
                      --->#35 |S0 Z0 C0| 00000100 | 4, 0x4 14 
14 {0} 07   RLC
                      --->#36 |S0 Z0 C0| 00001000 | 8, 0x8 15 
15 {0} 05   DCR_B
                      --->#37 |S0 Z0 C0| 00001000 | 8, 0x8 16 
16 {2} c2   JNZ 00 0d
                      --->#38 |S0 Z0 C0| 00001000 | 8, 0x8 13 
13 {0} 00   NOP
                      --->#39 |S0 Z0 C0| 00001000 | 8, 0x8 14 
14 {0} 07   RLC
                      --->#40 |S0 Z0 C0| 00010000 | 16, 0x10 15 
15 {0} 05   DCR_B
                      --->#41 |S0 Z0 C0| 00010000 | 16, 0x10 16 
16 {2} c2   JNZ 00 0d
                      --->#42 |S0 Z0 C0| 00010000 | 16, 0x10 13 
13 {0} 00   NOP
                      --->#43 |S0 Z0 C0| 00010000 | 16, 0x10 14 
14 {0} 07   RLC
                      --->#44 |S0 Z0 C0| 00100000 | 32, 0x20 15 
15 {0} 05   DCR_B
                      --->#45 |S0 Z0 C0| 00100000 | 32, 0x20 16 
16 {2} c2   JNZ 00 0d
                      --->#46 |S0 Z0 C0| 00100000 | 32, 0x20 13 
13 {0} 00   NOP
                      --->#47 |S0 Z0 C0| 00100000 | 32, 0x20 14 
14 {0} 07   RLC
                      --->#48 |S0 Z0 C0| 01000000 | 64, 0x40 15 
15 {0} 05   DCR_B
                      --->#49 |S0 Z0 C0| 01000000 | 64, 0x40 16 
16 {2} c2   JNZ 00 0d
                      --->#50 |S0 Z0 C0| 01000000 | 64, 0x40 13 
13 {0} 00   NOP
                      --->#51 |S0 Z0 C0| 01000000 | 64, 0x40 14 
14 {0} 07   RLC
                      --->#52 |S0 Z0 C0| 10000000 | 128, 0x80 15 
15 {0} 05   DCR_B
                      --->#53 |S0 Z1 C0| 10000000 | 128, 0x80 16 
16 {2} c2   JNZ 00 0d
                      --->#54 |S0 Z1 C0| 10000000 | 128, 0x80 19 
19 {0} 00   NOP
                      --->#55 |S0 Z1 C0| 10000000 | 128, 0x80 20 
20 {1} 3e   MVI_A 0x9
                      --->#56 |S0 Z0 C0| 00001001 | 9, 0x9 22 
22 {0} 00   NOP
                      --->#57 |S0 Z0 C0| 00001001 | 9, 0x9 23 
.:. function:  run_hex_code
--> duration (milis.) --> 416

--------------------------------
mem_free: 32784
================================
[ system registers ]
a: 9 0x9 0b1001
b: 0  | c: 0
h: 0  | l: 0
--------------------------------
|S|Z|0|C|0|P|1|C|
|0|0|0|0|0|0|1|0|
================================
[ virtual memory ] - (16/32 bytes)
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--- hexa:
0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
--- string:

================================
asm file name: example02_s80.asm
core_s80 ver. 0.5