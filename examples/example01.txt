; example01_s80 - test correct JUMP
; org 0x00 ; (default)
;
start:
    MVI_A 0x07 ; note
    MOV_B,A
               ; b = 7
loop1:
    NOP        ; test correct jump
    DCR_A      ; decrement
    JNZ loop1  ; jump if not zero   
loop2:
    NOP 
    MVI_A 0x09 ; a = 9
    RLC  
    RLC
    RLC
    RRC
    RRC
    RRC
;    
    NOP
end.







[ two-pass translator ]
- open file: example01_s80.asm
0  pc: 0  instr: 0  pc+ 0  p1,p2  
---parts: ['MVI_A', '0x07']
1  pc: 2  instr: 0x3e  pc+ 2  p1,p2 0x07 
---parts: ['MOV_B,A']
2  pc: 3  instr: 0x47  pc+ 1  p1,p2  
3  pc: 3  instr: 0  pc+ 0  p1,p2  
---parts: ['NOP']
4  pc: 4  instr: 0x0  pc+ 1  p1,p2  
---parts: ['DCR_A']
5  pc: 5  instr: 0x3d  pc+ 1  p1,p2  
---parts: ['JNZ', 'loop1']
---jmp---add 0x00
6  pc: 8  instr: 0xc2  pc+ 3  p1,p2 loop1 
7  pc: 8  instr: 0  pc+ 0  p1,p2  
---parts: ['NOP']
8  pc: 9  instr: 0x0  pc+ 1  p1,p2  
---parts: ['MVI_A', '0x09']
9  pc: 11  instr: 0x3e  pc+ 2  p1,p2 0x09 
---parts: ['RLC']
10  pc: 12  instr: 0x7  pc+ 1  p1,p2  
---parts: ['RLC']
11  pc: 13  instr: 0x7  pc+ 1  p1,p2  
---parts: ['RLC']
12  pc: 14  instr: 0x7  pc+ 1  p1,p2  
---parts: ['RRC']
13  pc: 15  instr: 0xf  pc+ 1  p1,p2  
---parts: ['RRC']
14  pc: 16  instr: 0xf  pc+ 1  p1,p2  
---parts: ['RRC']
15  pc: 17  instr: 0xf  pc+ 1  p1,p2  
---parts: ['NOP']
16  pc: 18  instr: 0x0  pc+ 1  p1,p2  
17  pc: 18  instr: 0  pc+ 0  p1,p2  
- temp_labels: {'loop2:': 8, 'loop1:': 3, 'start:': 0}
- temp_prog. : ['0x3e', '0x07', '0x47', '0x0', '0x3d', '0xc2', 0, 'loop1', '0x0', '0x3e', '0x09', '0x7', '0x7', '0x7', '0xf', '0xf', '0xf', '0x0']
[ the second pass replaces labels with addr. ]
---label--- loop1: 3
loop1 <--- 3
- program_num [62, 7, 71, 0, 61, 194, 0, 3, 0, 62, 9, 7, 7, 7, 15, 15, 15, 0]
------------------------------
len(instr_set): 18
==============================
0 {1} 3e   MVI_A 0x7
                      --->#1 |S0 Z0 C0| 00000111 | 7, 0x7 2 
2 {0} 47   MOV_B,A
                      --->#2 |S0 Z0 C0| 00000111 | 7, 0x7 3 
3 {0} 00   NOP
                      --->#3 |S0 Z0 C0| 00000111 | 7, 0x7 4 
4 {0} 3d   DCR_A
                      --->#4 |S0 Z0 C0| 00000110 | 6, 0x6 5 
5 {2} c2   JNZ 00 03
                      --->#5 |S0 Z0 C0| 00000110 | 6, 0x6 3 
3 {0} 00   NOP
                      --->#6 |S0 Z0 C0| 00000110 | 6, 0x6 4 
4 {0} 3d   DCR_A
                      --->#7 |S0 Z0 C0| 00000101 | 5, 0x5 5 
5 {2} c2   JNZ 00 03
                      --->#8 |S0 Z0 C0| 00000101 | 5, 0x5 3 
3 {0} 00   NOP
                      --->#9 |S0 Z0 C0| 00000101 | 5, 0x5 4 
4 {0} 3d   DCR_A
                      --->#10 |S0 Z0 C0| 00000100 | 4, 0x4 5 
5 {2} c2   JNZ 00 03
                      --->#11 |S0 Z0 C0| 00000100 | 4, 0x4 3 
3 {0} 00   NOP
                      --->#12 |S0 Z0 C0| 00000100 | 4, 0x4 4 
4 {0} 3d   DCR_A
                      --->#13 |S0 Z0 C0| 00000011 | 3, 0x3 5 
5 {2} c2   JNZ 00 03
                      --->#14 |S0 Z0 C0| 00000011 | 3, 0x3 3 
3 {0} 00   NOP
                      --->#15 |S0 Z0 C0| 00000011 | 3, 0x3 4 
4 {0} 3d   DCR_A
                      --->#16 |S0 Z0 C0| 00000010 | 2, 0x2 5 
5 {2} c2   JNZ 00 03
                      --->#17 |S0 Z0 C0| 00000010 | 2, 0x2 3 
3 {0} 00   NOP
                      --->#18 |S0 Z0 C0| 00000010 | 2, 0x2 4 
4 {0} 3d   DCR_A
                      --->#19 |S0 Z0 C0| 00000001 | 1, 0x1 5 
5 {2} c2   JNZ 00 03
                      --->#20 |S0 Z0 C0| 00000001 | 1, 0x1 3 
3 {0} 00   NOP
                      --->#21 |S0 Z0 C0| 00000001 | 1, 0x1 4 
4 {0} 3d   DCR_A
                      --->#22 |S0 Z1 C0| 00000000 | 0, 0x0 5 
5 {2} c2   JNZ 00 03
                      --->#23 |S0 Z1 C0| 00000000 | 0, 0x0 8 
8 {0} 00   NOP
                      --->#24 |S0 Z1 C0| 00000000 | 0, 0x0 9 
9 {1} 3e   MVI_A 0x9
                      --->#25 |S0 Z0 C0| 00001001 | 9, 0x9 11 
11 {0} 07   RLC
                      --->#26 |S0 Z0 C0| 00010010 | 18, 0x12 12 
12 {0} 07   RLC
                      --->#27 |S0 Z0 C0| 00100100 | 36, 0x24 13 
13 {0} 07   RLC
                      --->#28 |S0 Z0 C0| 01001000 | 72, 0x48 14 
14 {0} 0f   RRC
                      --->#29 |S0 Z0 C0| 00100100 | 36, 0x24 15 
15 {0} 0f   RRC
                      --->#30 |S0 Z0 C0| 00010010 | 18, 0x12 16 
16 {0} 0f   RRC
                      --->#31 |S0 Z0 C0| 00001001 | 9, 0x9 17 
17 {0} 00   NOP
                      --->#32 |S0 Z0 C0| 00001001 | 9, 0x9 18 
.:. function:  run_hex_code
--> duration (milis.) --> 474

------------------------------
mem_free: 39856
================================
[ system registers ]
a: 9 0x9 0b1001
b: 7  | c: 0
h: 0  | l: 0
--------------------------------
|S|Z|0|C|0|P|1|C|
|0|0|0|0|0|0|1|0|
================================
[ virtual memory ] - (16/32 bytes)
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
--- hexa:
0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 
--- string:

================================
core_s80 ver. 0.3
